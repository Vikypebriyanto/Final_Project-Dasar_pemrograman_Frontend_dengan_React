{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\grader\\\\Final Project - Frontend Web Development with React Assignments\\\\react-dasar-final-poject-student-portal-v1\\\\src\\\\Routes\\\\EditStudent.jsx\",\n  _s = $RefreshSig$();\n// TODO: answer here\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditStudent = () => {\n  _s();\n  // TODO: answer here\n  const [formData, setFormData] = useState({\n    fullname: \"\",\n    profilePicture: \"\",\n    address: \"\",\n    phoneNumber: \"\",\n    birthDate: \"\",\n    gender: \"\",\n    programStudy: \"\",\n    faculty: \"\"\n  });\n  const [loading, setLoading] = useState(true);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  useEffect(() => {\n    const fetchStudentData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/student/${id}`);\n        const studentData = await response.json();\n        setFormData(studentData);\n        setLoading(false);\n        setIsDataLoaded(true);\n      } catch (error) {\n        console.error(error);\n        setLoading(false);\n        setIsDataLoaded(true);\n      }\n    };\n    fetchStudentData();\n  }, [id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let updatedFaculty = \"\";\n    if (name === \"programStudy\") {\n      switch (value) {\n        case \"Ekonomi\":\n        case \"Manajemen\":\n        case \"Akuntansi\":\n          updatedFaculty = \"Fakultas Ekonomi\";\n          break;\n        case \"Administrasi Publik\":\n        case \"Administrasi Bisnis\":\n        case \"Hubungan Internasional\":\n          updatedFaculty = \"Fakultas Ilmu Sosial dan Politik\";\n          break;\n        case \"Teknik Sipil\":\n        case \"Arsitektur\":\n          updatedFaculty = \"Fakultas Teknik\";\n          break;\n        case \"Matematika\":\n        case \"Fisika\":\n        case \"Informatika\":\n          updatedFaculty = \"Fakultas Teknologi Informasi dan Sains\";\n          break;\n        default:\n          break;\n      }\n    }\n    setFormData({\n      ...formData,\n      [name]: value,\n      faculty: updatedFaculty\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await fetch(`http://localhost:3001/student/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      navigate(\"/student\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  if (!isDataLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"faculty\",\n            children: \"Faculty:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"faculty\",\n            value: faculty,\n            onChange: e => setFaculty(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(EditStudent, \"jZzX8nRCCWMa37GBUaFBXJ9U1wE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditStudent;\nexport default EditStudent;\nvar _c;\n$RefreshReg$(_c, \"EditStudent\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","EditStudent","_s","formData","setFormData","fullname","profilePicture","address","phoneNumber","birthDate","gender","programStudy","faculty","loading","setLoading","id","navigate","isDataLoaded","setIsDataLoaded","fetchStudentData","response","fetch","studentData","json","error","console","handleChange","e","name","value","target","updatedFaculty","handleSubmit","preventDefault","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","setName","required","setFaculty","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/grader/Final Project - Frontend Web Development with React Assignments/react-dasar-final-poject-student-portal-v1/src/Routes/EditStudent.jsx"],"sourcesContent":["// TODO: answer here\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\n\nconst EditStudent = () => {\n    // TODO: answer here\n    const [formData, setFormData] = useState({\n        fullname: \"\",\n        profilePicture: \"\",\n        address: \"\",\n        phoneNumber: \"\",\n        birthDate: \"\",\n        gender: \"\",\n        programStudy: \"\",\n        faculty: \"\",\n    });\n    const [loading, setLoading] = useState(true);\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [isDataLoaded, setIsDataLoaded] = useState(false);\n\n    useEffect(() => {\n        const fetchStudentData = async () => {\n            try {\n                const response = await fetch(`http://localhost:3001/student/${id}`);\n                const studentData = await response.json();\n                setFormData(studentData);\n                setLoading(false);\n                setIsDataLoaded(true);\n            } catch (error) {\n                console.error(error);\n                setLoading(false);\n                setIsDataLoaded(true);\n            }\n        };\n\n        fetchStudentData();\n    }, [id]);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        let updatedFaculty = \"\";\n\n        if (name === \"programStudy\") {\n            switch (value) {\n                case \"Ekonomi\":\n                case \"Manajemen\":\n                case \"Akuntansi\":\n                    updatedFaculty = \"Fakultas Ekonomi\";\n                    break;\n                case \"Administrasi Publik\":\n                case \"Administrasi Bisnis\":\n                case \"Hubungan Internasional\":\n                    updatedFaculty = \"Fakultas Ilmu Sosial dan Politik\";\n                    break;\n                case \"Teknik Sipil\":\n                case \"Arsitektur\":\n                    updatedFaculty = \"Fakultas Teknik\";\n                    break;\n                case \"Matematika\":\n                case \"Fisika\":\n                case \"Informatika\":\n                    updatedFaculty = \"Fakultas Teknologi Informasi dan Sains\";\n                    break;\n                default:\n                    break;\n            }\n        }\n        setFormData({\n            ...formData,\n            [name]: value,\n            faculty: updatedFaculty,\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            await fetch(`http://localhost:3001/student/${id}`, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(formData),\n            });\n            navigate(\"/student\");\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    if (!isDataLoaded) {\n        return <p>Loading ...</p>;\n    }\n\n\n    return (\n        <>\n            {/* TODO: answer here */}\n            <div>\n                <h2>Edit Student</h2>\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label htmlFor=\"name\">Name:</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"faculty\">Faculty:</label>\n                        <input\n                            type=\"text\"\n                            id=\"faculty\"\n                            value={faculty}\n                            onChange={(e) => setFaculty(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\">Update</button>\n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default EditStudent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}